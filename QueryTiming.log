Query 1 - Retrieve a list of all flights including their departure and arrival locations, and scheduled times.

"QUERY PLAN"
"Sort  (cost=149.38..154.38 rows=2000 width=30) (actual time=5.964..6.215 rows=2000 loops=1)"
"  Sort Key: fi.flightcode, f.departuredate"
"  Sort Method: quicksort  Memory: 174kB"
"  ->  Hash Join  (cost=3.25..39.72 rows=2000 width=30) (actual time=0.155..1.957 rows=2000 loops=1)"
"        Hash Cond: ((f.flightcode)::text = (fi.flightcode)::text)"
"        ->  Seq Scan on flight f  (cost=0.00..31.00 rows=2000 width=14) (actual time=0.018..0.439 rows=2000 loops=1)"
"        ->  Hash  (cost=2.00..2.00 rows=100 width=22) (actual time=0.125..0.126 rows=100 loops=1)"
"              Buckets: 1024  Batches: 1  Memory Usage: 14kB"
"              ->  Seq Scan on flightinfo fi  (cost=0.00..2.00 rows=100 width=22) (actual time=0.011..0.068 rows=100 loops=1)"
"Planning Time: 1.216 ms"
"Execution Time: 6.455 ms"


Query 2 - Find the total number of bookings made by each customer, including the customer's name.

"QUERY PLAN"
"Sort  (cost=11033.45..11158.45 rows=50000 width=26) (actual time=108.100..109.759 rows=49076 loops=1)"
"  Sort Key: c.customerid"
"  Sort Method: quicksort  Memory: 3859kB"
"  ->  HashAggregate  (cost=6631.04..7131.04 rows=50000 width=26) (actual time=98.702..101.497 rows=49076 loops=1)"
"        Group Key: c.customerid"
"        Batches: 1  Memory Usage: 5905kB"
"        ->  Hash Join  (cost=1434.00..5631.04 rows=200000 width=22) (actual time=19.093..65.266 rows=200000 loops=1)"
"              Hash Cond: (t.customerid = c.customerid)"
"              ->  Seq Scan on ticket t  (cost=0.00..3672.00 rows=200000 width=8) (actual time=0.011..6.508 rows=200000 loops=1)"
"              ->  Hash  (cost=809.00..809.00 rows=50000 width=18) (actual time=18.986..18.987 rows=50000 loops=1)"
"                    Buckets: 65536  Batches: 1  Memory Usage: 2968kB"
"                    ->  Seq Scan on customer c  (cost=0.00..809.00 rows=50000 width=18) (actual time=0.008..7.575 rows=50000 loops=1)"
"Planning Time: 1.545 ms"
"Execution Time: 111.229 ms"


Query 3 - Get the average rating from each rewards customers

"QUERY PLAN"
"GroupAggregate  (cost=635.26..666.91 rows=1407 width=36) (actual time=9.923..10.945 rows=1137 loops=1)"
"  Group Key: ticket.customerid"
"  ->  Sort  (cost=635.26..638.77 rows=1407 width=8) (actual time=9.888..9.978 rows=1162 loops=1)"
"        Sort Key: ticket.customerid"
"        Sort Method: quicksort  Memory: 85kB"
"        ->  Merge Join  (cost=1.05..561.68 rows=1407 width=8) (actual time=0.131..9.479 rows=1162 loops=1)"
"              Merge Cond: (ticket.ticketid = review.ticketid)"
"              ->  Nested Loop  (cost=0.72..24930.92 rows=93826 width=8) (actual time=0.107..7.509 rows=1163 loops=1)"
"                    ->  Index Scan using ticket_pkey on ticket  (cost=0.42..6879.42 rows=200000 width=8) (actual time=0.007..0.868 rows=3003 loops=1)"
"                    ->  Memoize  (cost=0.30..0.32 rows=1 width=4) (actual time=0.002..0.002 rows=0 loops=3003)"
"                          Cache Key: ticket.customerid"
"                          Cache Mode: logical"
"                          Hits: 88  Misses: 2915  Evictions: 0  Overflows: 0  Memory Usage: 234kB"
"                          ->  Index Only Scan using rewardscustomer_pkey on rewardscustomer  (cost=0.29..0.31 rows=1 width=4) (actual time=0.001..0.001 rows=0 loops=2915)"
"                                Index Cond: (customerid = ticket.customerid)"
"                                Heap Fetches: 0"
"              ->  Index Scan using review_ticketid_key on review  (cost=0.28..165.25 rows=3000 width=8) (actual time=0.012..0.984 rows=3000 loops=1)"
"Planning Time: 1.344 ms"
"Execution Time: 11.391 ms"


Query 4 - List all customers who have traveled more than five times, including their total number of flights and the most frequent destination.

"QUERY PLAN"
"Sort  (cost=59217.44..59425.77 rows=83335 width=30) (actual time=410.134..410.492 rows=10735 loops=1)"
"  Sort Key: (count(t_1.ticketid)) DESC"
"  Sort Method: quicksort  Memory: 1038kB"
"  ->  Merge Join  (cost=33576.19..50411.20 rows=83335 width=30) (actual time=324.805..408.888 rows=10735 loops=1)"
"        Merge Cond: (td.customerid = c.customerid)"
"        ->  Subquery Scan on td  (cost=25151.40..40733.88 rows=1000 width=8) (actual time=207.455..288.776 rows=49068 loops=1)"
"              Filter: (td.rn = 1)"
"              ->  WindowAgg  (cost=25151.40..38233.88 rows=200000 width=24) (actual time=207.454..286.742 rows=49068 loops=1)"
"                    Run Condition: (row_number() OVER (?) <= 1)"
"                    ->  Incremental Sort  (cost=25151.40..34733.88 rows=200000 width=16) (actual time=207.435..267.974 rows=193804 loops=1)"
"                          Sort Key: t.customerid, (count(*)) DESC"
"                          Presorted Key: t.customerid"
"                          Full-sort Groups: 5723  Sort Method: quicksort  Average Memory: 26kB  Peak Memory: 26kB"
"                          ->  GroupAggregate  (cost=25151.25..29151.25 rows=200000 width=16) (actual time=207.407..246.534 rows=193817 loops=1)"
"                                Group Key: t.customerid, fi.destination"
"                                ->  Sort  (cost=25151.25..25651.25 rows=200000 width=8) (actual time=207.398..219.915 rows=199988 loops=1)"
"                                      Sort Key: t.customerid, fi.destination"
"                                      Sort Method: external merge  Disk: 3528kB"
"                                      ->  Hash Join  (cost=59.25..4804.61 rows=200000 width=8) (actual time=1.352..111.254 rows=200000 loops=1)"
"                                            Hash Cond: ((f.flightcode)::text = (fi.flightcode)::text)"
"                                            ->  Hash Join  (cost=56.00..4254.11 rows=200000 width=10) (actual time=1.249..69.432 rows=200000 loops=1)"
"                                                  Hash Cond: (t.flightid = f.flightid)"
"                                                  ->  Seq Scan on ticket t  (cost=0.00..3672.00 rows=200000 width=8) (actual time=0.007..15.837 rows=200000 loops=1)"
"                                                  ->  Hash  (cost=31.00..31.00 rows=2000 width=10) (actual time=1.220..1.221 rows=2000 loops=1)"
"                                                        Buckets: 2048  Batches: 1  Memory Usage: 100kB"
"                                                        ->  Seq Scan on flight f  (cost=0.00..31.00 rows=2000 width=10) (actual time=0.009..0.572 rows=2000 loops=1)"
"                                            ->  Hash  (cost=2.00..2.00 rows=100 width=10) (actual time=0.083..0.083 rows=100 loops=1)"
"                                                  Buckets: 1024  Batches: 1  Memory Usage: 13kB"
"                                                  ->  Seq Scan on flightinfo fi  (cost=0.00..2.00 rows=100 width=10) (actual time=0.015..0.041 rows=100 loops=1)"
"        ->  Sort  (cost=8424.79..8466.46 rows=16667 width=26) (actual time=117.335..117.755 rows=10735 loops=1)"
"              Sort Key: c.customerid"
"              Sort Method: quicksort  Memory: 954kB"
"              ->  HashAggregate  (cost=6631.04..7256.04 rows=16667 width=26) (actual time=113.408..115.937 rows=10735 loops=1)"
"                    Group Key: c.customerid"
"                    Filter: (count(t_1.ticketid) > 5)"
"                    Batches: 1  Memory Usage: 5905kB"
"                    Rows Removed by Filter: 38341"
"                    ->  Hash Join  (cost=1434.00..5631.04 rows=200000 width=22) (actual time=10.306..67.890 rows=200000 loops=1)"
"                          Hash Cond: (t_1.customerid = c.customerid)"
"                          ->  Seq Scan on ticket t_1  (cost=0.00..3672.00 rows=200000 width=8) (actual time=0.010..6.428 rows=200000 loops=1)"
"                          ->  Hash  (cost=809.00..809.00 rows=50000 width=18) (actual time=10.281..10.281 rows=50000 loops=1)"
"                                Buckets: 65536  Batches: 1  Memory Usage: 2968kB"
"                                ->  Seq Scan on customer c  (cost=0.00..809.00 rows=50000 width=18) (actual time=0.004..3.166 rows=50000 loops=1)"
"Planning Time: 0.953 ms"
"Execution Time: 412.055 ms"


Query 5 - Reschedule all flights with the flight code LH594 to 11:15:00

"QUERY PLAN"
"Update on flightinfo  (cost=0.00..2.25 rows=0 width=0) (actual time=0.337..0.337 rows=0 loops=1)"
"  ->  Seq Scan on flightinfo  (cost=0.00..2.25 rows=1 width=14) (actual time=0.024..0.037 rows=1 loops=1)"
"        Filter: ((flightcode)::text = 'LH594'::text)"
"        Rows Removed by Filter: 99"
"Planning Time: 0.103 ms"
"Execution Time: 0.602 ms"


Query 6 - Reschedule all flights that were scheduled to depart on July 22nd, 2024 to the next day.

"QUERY PLAN"
"Update on flight  (cost=0.00..36.00 rows=0 width=0) (actual time=0.810..0.810 rows=0 loops=1)"
"  ->  Seq Scan on flight  (cost=0.00..36.00 rows=9 width=10) (actual time=0.012..0.379 rows=9 loops=1)"
"        Filter: (departuredate = '2024-07-22'::date)"
"        Rows Removed by Filter: 1991"
"Planning Time: 0.315 ms"
"Execution Time: 0.846 ms"


Query 7 - Delete all flights that were completed before June 4th, 2024.

"QUERY PLAN"
"Delete on review  (cost=5077.20..5206.20 rows=0 width=0) (actual time=36.086..36.088 rows=0 loops=1)"
"  ->  Hash Semi Join  (cost=5077.20..5206.20 rows=1000 width=18) (actual time=35.603..36.037 rows=215 loops=1)"
"        Hash Cond: (review.ticketid = ticket.ticketid)"
"        ->  Seq Scan on review  (cost=0.00..110.00 rows=3000 width=10) (actual time=0.014..0.213 rows=3000 loops=1)"
"        ->  Hash  (cost=4243.45..4243.45 rows=66700 width=16) (actual time=35.547..35.548 rows=14151 loops=1)"
"              Buckets: 131072  Batches: 1  Memory Usage: 1715kB"
"              ->  Hash Join  (cost=45.34..4243.45 rows=66700 width=16) (actual time=0.527..32.830 rows=14151 loops=1)"
"                    Hash Cond: (ticket.flightid = flight.flightid)"
"                    ->  Seq Scan on ticket  (cost=0.00..3672.00 rows=200000 width=14) (actual time=0.011..21.725 rows=200000 loops=1)"
"                    ->  Hash  (cost=37.00..37.00 rows=667 width=10) (actual time=0.499..0.499 rows=140 loops=1)"
"                          Buckets: 1024  Batches: 1  Memory Usage: 15kB"
"                          ->  Seq Scan on flight  (cost=0.00..37.00 rows=667 width=10) (actual time=0.019..0.448 rows=140 loops=1)"
"                                Filter: (departuredate < '2024-06-04'::date)"
"                                Rows Removed by Filter: 1860"
"Planning Time: 1.439 ms"
"Execution Time: 36.236 ms"
"QUERY PLAN"
"Delete on ticket  (cost=37.65..4235.76 rows=0 width=0) (actual time=39.344..39.346 rows=0 loops=1)"
"  ->  Hash Join  (cost=37.65..4235.76 rows=13200 width=12) (actual time=0.253..32.054 rows=14151 loops=1)"
"        Hash Cond: (ticket.flightid = flight.flightid)"
"        ->  Seq Scan on ticket  (cost=0.00..3672.00 rows=200000 width=10) (actual time=0.011..20.393 rows=200000 loops=1)"
"        ->  Hash  (cost=36.00..36.00 rows=132 width=10) (actual time=0.227..0.227 rows=140 loops=1)"
"              Buckets: 1024  Batches: 1  Memory Usage: 15kB"
"              ->  Seq Scan on flight  (cost=0.00..36.00 rows=132 width=10) (actual time=0.008..0.201 rows=140 loops=1)"
"                    Filter: (departuredate < '2024-06-04'::date)"
"                    Rows Removed by Filter: 1860"
"Planning Time: 0.652 ms"
"Trigger for constraint review_ticketid_fkey: time=60.444 calls=14151"
"Execution Time: 100.208 ms"
"QUERY PLAN"
"Delete on flight  (cost=0.00..36.00 rows=0 width=0) (actual time=0.378..0.379 rows=0 loops=1)"
"  ->  Seq Scan on flight  (cost=0.00..36.00 rows=132 width=6) (actual time=0.012..0.193 rows=140 loops=1)"
"        Filter: (departuredate < '2024-06-04'::date)"
"        Rows Removed by Filter: 1860"
"Planning Time: 0.077 ms"
"Trigger for constraint ticket_flightid_fkey: time=1451.328 calls=140"
"Execution Time: 1451.805 ms"


Query 8 - Delete customer records who have not flown in the past month and has no future flights.

"QUERY PLAN"
"Hash Join  (cost=71.00..4269.11 rows=200000 width=4) (actual time=1.712..32.312 rows=200000 loops=1)"
"  Hash Cond: (ticket.flightid = flight.flightid)"
"  ->  Seq Scan on ticket  (cost=0.00..3672.00 rows=200000 width=8) (actual time=0.011..7.556 rows=200000 loops=1)"
"  ->  Hash  (cost=46.00..46.00 rows=2000 width=4) (actual time=1.688..1.688 rows=2000 loops=1)"
"        Buckets: 2048  Batches: 1  Memory Usage: 87kB"
"        ->  Seq Scan on flight  (cost=0.00..46.00 rows=2000 width=4) (actual time=0.014..1.128 rows=2000 loops=1)"
"              Filter: (departuredate > (CURRENT_DATE - '1 mon'::interval))"
"Planning Time: 1.542 ms"
"Execution Time: 62.209 ms"
"QUERY PLAN"
"Delete on petcustomer  (cost=4130.00..4134.00 rows=0 width=0) (actual time=49.889..49.890 rows=0 loops=1)"
"  ->  Seq Scan on petcustomer  (cost=4130.00..4134.00 rows=50 width=6) (actual time=49.824..49.864 rows=6 loops=1)"
"        Filter: ((NOT (hashed SubPlan 1)) AND (NOT (hashed SubPlan 2)))"
"        Rows Removed by Filter: 194"
"        SubPlan 1"
"          ->  Seq Scan on flyingcustomers  (cost=0.00..3180.80 rows=228480 width=4) (actual time=0.033..12.524 rows=200000 loops=1)"
"        SubPlan 2"
"          ->  Seq Scan on rewardscustomer  (cost=0.00..328.00 rows=20000 width=4) (actual time=0.013..0.863 rows=20000 loops=1)"
"Planning Time: 1.117 ms"
"Execution Time: 50.208 ms"
"QUERY PLAN"
"Delete on identification  (cost=4130.00..5820.00 rows=0 width=0) (actual time=58.155..58.156 rows=0 loops=1)"
"  ->  Seq Scan on identification  (cost=4130.00..5820.00 rows=17500 width=6) (actual time=44.601..55.874 rows=741 loops=1)"
"        Filter: ((NOT (hashed SubPlan 1)) AND (NOT (hashed SubPlan 2)))"
"        Rows Removed by Filter: 69259"
"        SubPlan 1"
"          ->  Seq Scan on flyingcustomers  (cost=0.00..3180.80 rows=228480 width=4) (actual time=0.029..9.888 rows=200000 loops=1)"
"        SubPlan 2"
"          ->  Seq Scan on rewardscustomer  (cost=0.00..328.00 rows=20000 width=4) (actual time=0.012..0.825 rows=20000 loops=1)"
"Planning Time: 0.596 ms"
"Execution Time: 58.597 ms"
"QUERY PLAN"
"Delete on customer  (cost=4130.00..5189.00 rows=0 width=0) (actual time=60.255..60.256 rows=0 loops=1)"
"  ->  Seq Scan on customer  (cost=4130.00..5189.00 rows=12500 width=6) (actual time=50.068..58.617 rows=546 loops=1)"
"        Filter: ((NOT (hashed SubPlan 1)) AND (NOT (hashed SubPlan 2)))"
"        Rows Removed by Filter: 49454"
"        SubPlan 1"
"          ->  Seq Scan on flyingcustomers  (cost=0.00..3180.80 rows=228480 width=4) (actual time=0.016..11.255 rows=200000 loops=1)"
"        SubPlan 2"
"          ->  Seq Scan on rewardscustomer  (cost=0.00..328.00 rows=20000 width=4) (actual time=0.011..0.812 rows=20000 loops=1)"
"Planning Time: 0.552 ms"
"Trigger for constraint identification_customerid_fkey: time=1933.141 calls=546"
"Trigger for constraint petcustomer_customerid_fkey: time=21.833 calls=546"
"Trigger for constraint rewardscustomer_customerid_fkey: time=8.407 calls=546"
"Trigger for constraint ticket_customerid_fkey: time=5181.523 calls=546"
"Execution Time: 7206.040 ms"


Query 9 - Retrieve customer details along with their flight information
"Nested Loop  (cost=1.22..20044.40 rows=200000 width=34) (actual time=1.264..134.950 rows=200000 loops=1)"
"  ->  Nested Loop  (cost=1.07..15057.07 rows=200000 width=32) (actual time=1.248..96.240 rows=200000 loops=1)"
"        ->  Merge Join  (cost=0.78..9467.54 rows=200000 width=22) (actual time=0.758..47.094 rows=200000 loops=1)"
"              Merge Cond: (c.customerid = t.customerid)"
"              ->  Index Scan using customer_pkey on customer c  (cost=0.29..1618.29 rows=50000 width=18) (actual time=0.008..7.674 rows=50000 loops=1)"
"              ->  Index Only Scan using idx_ticket_customerid_flightid on ticket t  (cost=0.42..5224.42 rows=200000 width=8) (actual time=0.132..24.248 rows=200000 loops=1)"
"                    Heap Fetches: 0"
"        ->  Memoize  (cost=0.29..0.31 rows=1 width=14) (actual time=0.000..0.000 rows=1 loops=200000)"
"              Cache Key: t.flightid"
"              Cache Mode: logical"
"              Hits: 198000  Misses: 2000  Evictions: 0  Overflows: 0  Memory Usage: 225kB"
"              ->  Index Scan using flight_pkey on flight f  (cost=0.28..0.30 rows=1 width=14) (actual time=0.003..0.003 rows=1 loops=2000)"
"                    Index Cond: (flightid = t.flightid)"
"  ->  Memoize  (cost=0.15..0.18 rows=1 width=14) (actual time=0.000..0.000 rows=1 loops=200000)"
"        Cache Key: f.flightcode"
"        Cache Mode: logical"
"        Hits: 199900  Misses: 100  Evictions: 0  Overflows: 0  Memory Usage: 12kB"
"        ->  Index Scan using flightinfo_pkey on flightinfo fi  (cost=0.14..0.17 rows=1 width=14) (actual time=0.002..0.002 rows=1 loops=100)"
"              Index Cond: ((flightcode)::text = (f.flightcode)::text)"
"Planning Time: 1.357 ms"
"Execution Time: 139.802 ms"


Query 10 - Retrieve flights with the number of customers booked from JPN
"HashAggregate  (cost=332.98..372.98 rows=4000 width=24) (actual time=6.409..6.489 rows=36 loops=1)"
"  Group Key: f.flightid, fi.destination"
"  Batches: 1  Memory Usage: 217kB"
"  ->  Nested Loop  (cost=4.73..302.98 rows=4000 width=20) (actual time=0.050..4.972 rows=3601 loops=1)"
"        ->  Nested Loop  (cost=4.43..33.43 rows=40 width=16) (actual time=0.041..0.115 rows=36 loops=1)"
"              ->  Seq Scan on flightinfo fi  (cost=0.00..2.25 rows=2 width=14) (actual time=0.014..0.029 rows=2 loops=1)"
"                    Filter: ((origin)::text = 'JPN'::text)"
"                    Rows Removed by Filter: 98"
"              ->  Bitmap Heap Scan on flight f  (cost=4.43..15.39 rows=20 width=14) (actual time=0.017..0.033 rows=18 loops=2)"
"                    Recheck Cond: ((flightcode)::text = (fi.flightcode)::text)"
"                    Heap Blocks: exact=19"
"                    ->  Bitmap Index Scan on idx_flight_flightcode  (cost=0.00..4.43 rows=20 width=0) (actual time=0.012..0.012 rows=18 loops=2)"
"                          Index Cond: ((flightcode)::text = (fi.flightcode)::text)"
"        ->  Index Scan using idx_ticket_flightid on ticket t  (cost=0.29..5.74 rows=100 width=8) (actual time=0.006..0.105 rows=100 loops=36)"
"              Index Cond: (flightid = f.flightid)"
"Planning Time: 0.438 ms"
"Execution Time: 6.581 ms"


Query 11 - Retrieve flights and the number of bookings for each flight
"HashAggregate  (cost=18117.11..21630.24 rows=156000 width=20) (actual time=84.507..84.829 rows=2000 loops=1)"
"  Group Key: f.flightid, fi.destination"
"  Planned Partitions: 4  Batches: 1  Memory Usage: 1681kB"
"  ->  Hash Join  (cost=59.25..4804.61 rows=200000 width=16) (actual time=1.460..59.361 rows=200000 loops=1)"
"        Hash Cond: ((f.flightcode)::text = (fi.flightcode)::text)"
"        ->  Hash Right Join  (cost=56.00..4254.11 rows=200000 width=18) (actual time=1.364..36.353 rows=200000 loops=1)"
"              Hash Cond: (t.flightid = f.flightid)"
"              ->  Seq Scan on ticket t  (cost=0.00..3672.00 rows=200000 width=8) (actual time=0.007..7.712 rows=200000 loops=1)"
"              ->  Hash  (cost=31.00..31.00 rows=2000 width=14) (actual time=1.347..1.347 rows=2000 loops=1)"
"                    Buckets: 2048  Batches: 1  Memory Usage: 108kB"
"                    ->  Seq Scan on flight f  (cost=0.00..31.00 rows=2000 width=14) (actual time=0.010..0.619 rows=2000 loops=1)"
"        ->  Hash  (cost=2.00..2.00 rows=100 width=10) (actual time=0.088..0.089 rows=100 loops=1)"
"              Buckets: 1024  Batches: 1  Memory Usage: 13kB"
"              ->  Seq Scan on flightinfo fi  (cost=0.00..2.00 rows=100 width=10) (actual time=0.019..0.046 rows=100 loops=1)"
"Planning Time: 0.721 ms"
"Execution Time: 85.197 ms"